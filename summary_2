Mysql 2
		查询 
				exists in 
				内联 外联
				深度分页
						回表
						索引下推
						explain
								file sort
								using where
								using index 
								using index condition
		并发
				锁
						临键锁
								临键锁作用范围
						意向锁作用
								插入意向锁作用
						MVCC

		优化
			慢查询
				show processlist
				explain
				索引优化
				强制索引
				避免回表
			原则
				负向查询
				精确匹配
				建立索引
				索引下推
			大表优化
				拆分
				读写分离
				缓存
				查询语句优化
		架构
			日志
				binlog
				redolog
				undolog
				slowlog
				relaylog
				两阶段提交
			组件
				链接器
				分析器
				优化器
				查询器
			流程
				建立连接
				语法分析
				执行查询
					磁盘
					内存
		分布式系统
			主从
				复制
					宕机 半同步复制
					延时 并行复制

redis 4
		特点
			效率高
				内存读写

				IO多路复用

		类型
			str
				特点
					获取长度O(1)
					拼接时不会溢出
					兼容二进制数据
				场景
					session
					计数器

			list
				结构
				场景
					消息队列
						缺点
							持久化
							只适用于单消费者
							单消费者的单点问题导致消息堆积
			set
				结构
					hash
					inset

			zset
				结构
					跳表
						为啥不用b树
				场景
					延时队列
					排行榜
			hash
				底层结构
			布隆过滤器
				原理
				缺点
					可能会误伤正常数据
					但是一定不会放过异常数据
				场景
					垃圾邮件过滤器
			数据扩容
				渐进式hash

		持久化
			rdb
				save/bgsave
			aof
				频率
					每秒写
					每次写
					os判断写入
				重写
					混合持久化
			重启是用aof还是rdb 优先aof
			生产场景
				aof
		分布式锁
			setnx
				原子性
				锁被其他线程释放
				锁超时
				锁释放的原子性保证
					lua
			redission
				watch dog
			red lock
				作用
		高可用
			主从
				同步流程
			哨兵
				作用
			集群
				一致性hash
		数据一致性
				cache aside (todo)
				read through
		淘汰策略

		命令
				sync
				fsync
				keys
				scan
				事务
		缓存问题
			雪崩
				解决方案
					事前
						主从高可用
						内存淘汰策略
						随机过期时间
					事中
						限流
						降级
					事后
						持久化恢复

			击穿
				解决
					永不过期
					互斥锁，一次只有一个线程进入数据库
					hystrix资源隔离
			穿透
				定义
				方案
					参数校验
					布隆过滤器
					value设置为null缓存无效key


kafka
	效率高原因
		零拷贝
			sendfile
			mmap
		缓存写
			page cache
	流程

	消息丢失
		producer丢
			场景
				网络波动
			解决方案
				ack+重试
		broker丢
			场景
				持久化时宕机
			解决方案
				ack设置为-1，至少写入leader的磁盘
		consumer丢
			场景
				网络
				宕机
			解决
				offset commit设置为手动
	消息乱序
		patition是否能保证消息顺序
		解决
			partition设置为和consumer相等
			consumer多线程hash分片处理
	重复消费
		消息幂等性
		分布式锁
		执行记录表

	高可用

	线上问题
		手动提交但是默认异步提交
	生产环境



zk
	节点
		持久性节点
		临时节点

	zab
		消息广播
		崩溃恢复
	分布式锁


网络
	加密算法
		非对称
			RSA
		对称
			DES
			AES
	网络攻击
		SQL注入

	ping
		icmp协议
			ttl含义作用
	tcp
		握手
			半连接
				半连接时的数据传输
				sync攻击
					解决方案
		挥手
			close wait
			time wait
				等待2msl的作用
					msl的含义
				大量time wait解决方案
		拥塞控制
		流量控制
			滑动窗口
			arq协议
				停等arq
				连续arq
		粘包
			http划分
				length
					文件如何传输和确定大小
					chunked
	http
		版本
			1.1
				409
				长链接
			2.0
				二进制
				多路请求复用
				header压缩
			3.0
				没有握手

		状态码
			301
			302
				302url劫持
				重定向
				转发
			500
			502
			503
			504
		https加密
			服务端向客户端发送证书
			浏览器通过内置公钥解密出证书公钥
			客户端校验证书签名和域名
			客户端通过公钥加密对称加密密钥发送给服务端
			客户端服务端通过对称加密密钥进行数据传输
		无状态解决方案
			同源策略
			跨域
				解决方案
					CORS

java 8
	集合
	多线程
	jvm
	异常



spring 3
		aop
				动态代理
						jdk
						cglib
						aspectj
		ioc
				注入方式
						设计模式
						循环依赖
						bean
								作用域
								生命周期
		注解
				transactional
						传播机制

		tomcat请求流程
		springboot
				特点/理解
				启动流程
		springmvc请求流程

mongo 2
		特点/痛点
				灵活字段快速迭代
				查询效率高
						数据紧密随机io少
						io采用了mmap
				易拓展
						原生支持分片
						副本自动切换
		技术选型
				需求多变
				成本较低
				迭代较快
		高可用
				主从
						不具备高可用
				副本集
						自带选举同步转移
						一个分片多个节点构成一个副本集
				分片
						mongos
						shard
						config server

		索引
				结构
						b树
		效率
				对比关系型数据库
						无id > 有id
						nosql > sql


es 2
	概念
		node
		cluster
		shard
		replica
		mapping
		segment

	原理
		全文检索
			term index
			position list
			roaring map
		打分标准
			词频
			文档权重
			逆文档频率
		高效
			多节点
			乐观
			倒排压缩
			page cache顺序写
	流程
		写
			写内存
			写segment
			合并写磁盘
		删
			标识删除
			惰性
			合并空间


	问题
		深度分页
			from to
			scroll
			seach_after
				唯一标识




操作系统 3
	进程线程协程
	cpu执行
	io
		分类
			同步阻塞io
			同步非阻塞io
			多路复用io
			异步io
		定义
			阻塞非阻塞
			同步异步
			dma
		零拷贝
			mmap + write
			sendfile
			场景
				nginx
				kafka
					transferTo
				mongodb
				netty
	内存管理

linux 2
	命令行
	多路复用io
			select
			poll
			epoll



web服务器
	nginx tomcat区别


设计模式 2
	单例
	工厂
	构造者
	代理
	装饰器
	适配器
	责任链
	观察者
	模板方法
	策略

大数据 2
	hbase
	spark
	hadoop
	flink

业务场景 2
	分布式id
		snowflake
			hash不均匀
			时钟回拨 等待 记录最大id
			workid zk
	短链服务
		跳转301 302
		短链映射相同
		链接暴露安全问题
		并发问题
		方案
			摘要算法
			发号器生成id
			转换62进制

	秒杀系统
		问题
			恶意请求
			高并发写数据库
			超卖
		方案
			前端
				链接加盐
				cdn
				限流
				请求缓存
				降级
			后端
				消息队列
				缓存
				熔断降级隔离
		流程
			请求 cdn nginx tomcat redis mq mysql
	分库分表
		确定瓶颈
		确定方案
			垂直
			水平
		数据迁移
			主从切换 停机
			双写
		问题
			查询
			分表
				partition key
				非partition key 
					映射法
					基因法
					nosql

	分布式事务
		cap定理
			选择
				一般ap，特殊ca cp
		base定理
		解决方案
			数据库
				2pc
					问题
						同步阻塞
						无法确定状态
						数据不一致
						没有超时
				3pc
					改进
						多个阶段减少同步时间
						超时机制
						确定提交/回滚
			业务
				tcc
				尽最大努力通知
					银行转账
						同步
						异步




高并发 2
	设计原则
		优化手段
			scale up
			scale out
			async
		架构设计原则
			解耦
			单一职责
			开闭原则
		设计目标
			高性能
				qps 请求
				tps 事务
				au 活跃用户
			高可用
				故障转移
				限流
				降级
				灰度发布
			高拓展
				数据拆分
				业务拆分
	数据库
		池化技术
		主从分离
		分库分表
			唯一id
				uuid
				snowflake
					idhash分布不均匀
					时钟回拨
		noSQL
			拓展性
				分片
				副本集
				负载均衡
			性能高
				LSM树 合并修改刷盘
	缓存
		分类
			静态缓存
			分布式缓存
			cdn
		策略
			cache aside
			read/write through
			write back
		高可用
			客户端代码兼容
				数据偏移
			中间代理
			服务端
				sentinel
		命中率
			穿透
				不支持删除元素
				hash冲突误判
			击穿
		静态资源
			cdn
		数据迁移
			双写
			暂停迁移
			逐步迁移
	分布式服务
		服务拆分
			系统拓展
			沟通成本
			部署成本
		rpc
			流程
				二进制序列化
			io模型
				阻塞非阻塞
				同步异步
			序列化
				json
				protobuf
		注册发现
			文件配置
			注册中心
				单点故障
				通知风暴
		慢查询定位
			request_id
			切面日志输出
			traceId + spanId
		负载均衡
			轮询
			hash
			动态
		限流
			api网关
		多机房部署
			同城双活
			异地多活
		service mesh
	项目维护
		配置中心
		系统故障
			熔断
			降级
		流量控制
			窗口
			漏桶
			令牌桶
	实际场景
		微博评论计数器
		微博未读数
			反范式设计
		微博推送
			推拉

算法
		回溯 1
		双指针 1
		单调栈 1
		dp 1
		递归 1
		搜索 1
		排序 1
		哈希 1
		模板 2
				二分
				前缀树
		语法 0.5

