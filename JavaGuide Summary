JavaGuide Summary

Java
	基础
		概念
			JDK/JRE
			编译/解释
			字节码
			AOT
		基本数据类型
			包装类型缓存机制
			自动装箱拆箱
			精度丢失
			bigdecimal

		面向对象
			浅拷贝/深拷贝
			==/equals()
			hashcode()
			String/StringBffer/StringBuilder
			String不可变
			String +/常量折叠
		异常
			Throwable常用方法
			try with resources

		泛型
			泛型应用 
				自定义接口/集合类
		注解
			注解解析方式
				编译期直接扫描
				运行时通过反射处理
		SPI
			SPI/API
				
		序列化
			定义
			序列化协议
		IO
			BIO/AIO/NIO
		*汇总*
			值传递 
				java中基本类型是值的复制，引用类型是地址的复制（复制不是同一份）
				https://www.zhihu.com/question/31203609/answer/576030121

			序列化协议
			代理模式
				静态代理
				动态代理
					cglib
						AMS运行时动态生成字节码
						不需要实现接口
					JDK
						必须要接口
						效率较高
			BigDecimal原理
				按十进制还原为整数，并记录精度（* 10 或者 * 1000）
			Unsafe类
				作用
					内存屏障
					CAS
					...
			SPI
				由服务调用者给服务提供者定义的接口
				java中的SPI是通过反射的方式判断实现类是否实现了规定接口
			语法糖的坑
				编译时泛型擦除
				运行时无法判断泛型类型
				类泛型擦除后静态变量会关联到同一个地方 Fan<T>不同类的静态变量是一样的
				增强for的concurrentModificationException

	集合
		list
			ArrayList/Vector
			randomAccess
		Set
			HashSet/LinkedHashSet/TreeSet
		Queue
			Queue/Deque
			ArrayDeque/LinkedList
			PriorityQueue
		Map
			HashMap/HashTable
			HashMap/TreeMap
			HashSet
			HashMap底层实现/长度2^n/遍历方式/死锁/线程安全
			HashTable/ConcrruentHashMap
		注意事项
			判空
			转map
			遍历
			fail fast
			集合转数组
			数组转集合
	源码
		IO
			设计模式
				装饰器
				适配器
				工厂
				观察者
			IO模型
				BIO
				AIO
				NIO
		并发
			进程/线程/协程
			多线程
			线程生命周期
			上下文切换
			死锁
			锁
				乐观锁/悲观锁
				CAS
			JMM
			volatile
				可见性
				禁止指令重排
				无原子性
			synchronized
				原理
				优化
				synchronized/volatile
				synchronized/reentrantLock
			ThreadLocal
				原理
				风险
			Atomic
			线程池
				参数
				饱和策略
				原理
				大小设置
			AQS
				原理
				Semaphore
				CountDownLatch
				CyclicBarrier
		*重要*
			乐观锁/悲观锁
				实现/版本号/CAS
				存在问题/ABA
			JMM
				CPU模型
				指令重排
				JMM模型/happens-before
				并发编程
			线程池
				Executor
				ThreadPoolExecutor
				FixedExecutor/SingleThreadExecutor/CacheThreadPool
				ScheduledThreadPoolExecutor
				线程池大小
				使用场景
				实践
			并发容器
				ConcurrentHashMap
				CopyOnWriteArrayList
				ConcurrentLinkedQueue
				BlockingQueue
				ConcurrentSkipListMap
			AQS
				原理
				Semaphore/CountDownLatch/CyclicBarrier
			Atomic
				原理
				应用场景？
			ThreadLocal
				数据结构
				内存泄漏
				hash
				set/get
				过期key
				扩容
				InheritableThreadLocal
				实践
			CompletableFuture
	JVM
		内存区域
			运行时数据区
				程序计数器
				Java虚拟机栈
				本地方法栈
				堆
				方法区
				运行时常量池
				字符串常量池
				直接内存
			HotSpot对象
				创建
				内存布局
				访问定位
		垃圾回收
			堆空间
			内存分配回收
			死亡对象判断
			垃圾收集算法
			垃圾收集器
		类文件结构
			class结构
		类加载过程
			类生命周期
			加载流程
			卸载
		类加载器
			双亲委派
			自定义类加载器
		JVM参数
			堆内存相关
			垃圾收集相关
			OOM
		JVM调优
		JDK工具
			命令行工具
			可视化分析工具
	Java新特性
		

计算机基础
	网络
		常见面试题
			TCP/UDP
				区别
				适用场景
			HTTP
				一次请求过程
				HTTP保存用户状态
				URI/URL
			ARP
				MAC
				工作原理
		重要
			OSI
			TCP/IP
				应用层
				传输层
				网络层
				网络接口层
			应用层协议
				HTTP
				Telnet
				POP3
				SMTP
				FTP
				SSH
			HTTP
			HTTPS
				TLS
				SSL
			HTTP版本
				1.0
				1.1
				2.0
				3.0
			HTTP状态码
			TCP建立连接
				三次握手
				四次挥手
			TCP可靠性
				流控
				拥塞控制
				ARQ协议
			ARP协议
	操作系统
		常见面试题
			基础
				操作系统定义
				系统调用
			进程/线程
			内存管理
			虚拟内存
		Linux
			操作系统简介
			文件系统
			基本命令
			环境变量
		Shell
			变量
			基本运算符
			流程控制
			函数
	数据结构
		数组/链表/栈/队列
			应用场景
		堆
			定义
			存储
			操作
			排序
		树
			分类
			存储
		红黑树
		布隆过滤器
			redis中布隆过滤器

数据库
	基础知识
		drop/delete/truncate
		数据库结构设计流程
	NoSQL
		SQL/noSQL
		优势
		类型
	字符集
		常见字符集
			ASCII
			unicode/UTF-8
			GB2312
		MySQL字符集
	MySQL常见面试题
		基础架构
		存储引擎
		索引
		查询缓存
		日志
		事务
		锁
		性能优化
	MySQL性能优化
		命名规范
		基本设计规范
		字段设计规范
		索引设计规范
		SQL规范
		操作行为规范
	*重要*
		索引
			优缺点
			数据结构
			索引类型
			聚簇索引/非聚簇索引
			覆盖索引/联合索引
			索引下推
			相关建议
		日志
			redo log
			bin log
			两阶段提交
			undo log
		事务隔离级别
			脏读
			不可重复读
			幻读
		InnoDB/MVVC
			锁定读/非锁定读
			MVVC实现
			MVVC解决不可重复读
			Next-key-lock
		SQL执行流程
			基本架构
			语句执行分析
		MySQL执行计划
			如何分析explain结果
		MySQL自增组件连续性
		MySQL时间存储建议
		MySQL隐式转换造成索引失效
	Redis
		基础
		数据结构
		线程模型
		内存管理
		持久化机制
		事务
		性能优化
		生产问题
		集群
	*重要*
		缓存读写策略
		基本数据结构
			string
			list
			set
			zset
			hash
		特殊数据结构
			bitmap
		内存碎片
	ES
	MongoDB
		基础
		存储引擎
		聚合
		事务
		数据压缩
		索引
		高可用


开发工具
	maven
		核心概念
			作用
			坐标
			依赖
			仓库
			生命周期
			插件
			多模块管理
	git
		核心概念
			基本操作
	docker
		核心概念
			容器
			概念
			容器VS虚拟机
			基本概念
			常见命令
			底层原理

常用框架
	spring常见面试题
		spring基础
		spring IOC
		spring AOP
		spring MVC
		设计模式
		spring事务
	spring常用注解
	*重要*
		事务详解
		设计模式
		自动装配原理
	Mybatis常见面试题

系统设计
	restful api
		定义
		规范
	软件工程
		基本策略
	代码命名
		命名规则
		常见规范
	代码重构
		重构时机
		注意事项
	单测
		作用
		TDD
	认证
		RBAC
		cookie/session
		JWT
		SSO
		Oauth2.0
	JWT
		组成
		身份验证
		防止篡改
		安全性
		优势
		常见问题
	SSO
		作用
		设计实现
	权限系统
		设计方式
		设计思想
		核心模块
	系统设计面试题？
	敏感词过滤
		算法实现
	Java定时任务
		单机
		分布式
	web消息推送
		常见方案

分布式
	CAP&BASE
		CAP理论
		BASE理论
	Paxos
	Raft
		基础
		领导人选举
		日志复制
		安全性
	API网关
		常见网关
	分布式ID
		解决方案
	分布式锁
		方案
		基于redis的分布式锁
	分布式事务
	分布式配置中心
	RPC
		原理
		框架
		设计实现
	Dubbo
		分布式基础
		架构
		负载均衡
		序列化协议
	ZK
		基础
		概念
		集群
		ZAB协议&paxos算法
		一致性问题
		一致性协议算法
		ZAB
		ZK应用


高性能
	分库分表/读写分离
	负载均衡
	CDN
		原理
	SQL优化
	消息队列
		作用
		问题
		JMS/AMQP
		选型
	Kafka
		应用场景
		对比
		存在问题
	RabbitMQ
		队列模型/主题模型
		架构图
		问题
		分布式事务
		刷盘机制
		死信队列

高可用
	设计指南
		提高可用性的方法
	冗余设计
	服务限流
		限流算法
	降级&熔断
	超时&重试
	性能测试
		注意的点
		测试指标
		测试种类
		测试工具














